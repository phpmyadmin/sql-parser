<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.15.0@5c774aca4746caf3d239d9c8cadb9f882ca29352">
  <file src="src/Components/AlterOperation.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[[
        'ON SCHEDULE' => 1,
        'EVERY' => [
            2,
            'expr',
        ],
        'AT' => [
            2,
            'expr',
        ],
        'STARTS' => [
            3,
            'expr',
        ],
        'ENDS' => [
            4,
            'expr',
        ],
        'ON COMPLETION PRESERVE' => 5,
        'ON COMPLETION NOT PRESERVE' => 5,
        'RENAME' => 6,
        'TO' => [
            7,
            'expr',
            ['parseField' => 'table'],
        ],
        'ENABLE' => 8,
        'DISABLE' => 8,
        'DISABLE ON SLAVE' => 8,
        'COMMENT' => [
            9,
            'var',
        ],
        'DO' => 10,
    ]]]></code>
    </InvalidPropertyAssignmentValue>
    <PossiblyInvalidArgument>
      <code>$arrayKey</code>
    </PossiblyInvalidArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code>$options</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyTypeCoercion>
      <code><![CDATA[ArrayObj::parse(
                        $parser,
                        $list,
                        ['type' => PartitionDefinition::class]
                    )]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Components/ArrayObj.php">
    <MixedAssignment>
      <code>$ret[]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[$options['type']::parse(
                    $parser,
                    $list,
                    empty($options['typeOptions']) ? [] : $options['typeOptions']
                )]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <MixedReturnTypeCoercion>
      <code>$ret</code>
      <code>ArrayObj|Component[]</code>
    </MixedReturnTypeCoercion>
    <PossiblyInvalidPropertyAssignment>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
    </PossiblyInvalidPropertyAssignment>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$ret->raw]]></code>
      <code><![CDATA[$ret->raw]]></code>
      <code><![CDATA[$ret->values]]></code>
      <code><![CDATA[$ret->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <UndefinedMethod>
      <code>$ret</code>
    </UndefinedMethod>
  </file>
  <file src="src/Components/CaseExpression.php">
    <InvalidOperand>
      <code><![CDATA[! $token->flags]]></code>
    </InvalidOperand>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$ret->compareValues]]></code>
      <code><![CDATA[$ret->results]]></code>
      <code><![CDATA[$ret->results]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment>
      <code><![CDATA[$ret->alias]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
  </file>
  <file src="src/Components/Condition.php">
    <MixedArrayOffset>
      <code><![CDATA[static::$allowedKeywords[$token->value]]]></code>
    </MixedArrayOffset>
    <PossiblyUnusedProperty>
      <code>$isOperator</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Components/CreateDefinition.php">
    <MixedAssignment>
      <code><![CDATA[$expr->name]]></code>
      <code><![CDATA[$expr->name]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$this->options]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Components/DataType.php">
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$parameters->raw]]></code>
      <code><![CDATA[$parameters->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullPropertyAssignmentValue>
      <code>$name</code>
      <code>$options</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Components/Expression.php">
    <DocblockTypeContradiction>
      <code>$prev[0] === null</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$options['breakOnParentheses']]]></code>
    </InvalidArgument>
    <MixedArrayOffset>
      <code><![CDATA[Parser::$statementParsers[$token->keyword]]]></code>
      <code><![CDATA[self::$allowedKeywords[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[Parser::$statementParsers[$token->keyword]]]></code>
      <code><![CDATA[self::$allowedKeywords[$token->keyword]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$field</code>
      <code><![CDATA[$options['field']]]></code>
      <code><![CDATA[$ret->alias]]></code>
      <code><![CDATA[$ret->alias]]></code>
      <code><![CDATA[$ret->alias]]></code>
      <code><![CDATA[$ret->subquery]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
    </PossiblyNullOperand>
    <RedundantConditionGivenDocblockType>
      <code>$prev[1] !== null</code>
      <code><![CDATA[empty($ret->function) && ($prev[1] !== null)]]></code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[empty($options['field'])]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Components/ExpressionArray.php">
    <InvalidReturnStatement>
      <code>$ret</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>Expression[]</code>
    </InvalidReturnType>
    <PossiblyNullArgument>
      <code>$expr</code>
      <code>$expr</code>
      <code>$expr</code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>buildAll</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Components/FunctionCall.php">
    <MixedOperand>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>ArrayObj::parse($parser, $list)</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullOperand>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->parameters]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Components/GroupKeyword.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$expr</code>
      <code>Expression::parse($parser, $list)</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyUnusedProperty>
      <code>$type</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Components/IndexHint.php">
    <MixedAssignment>
      <code><![CDATA[$expr->type]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$this->indexOrKey]]></code>
      <code><![CDATA[$this->type]]></code>
    </PossiblyNullOperand>
    <PossiblyUnusedMethod>
      <code>buildAll</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Components/IntoKeyword.php">
    <MixedArgument>
      <code><![CDATA[$token->keyword]]></code>
      <code><![CDATA[$token->keyword]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$ret->dest]]></code>
    </MixedAssignment>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[ArrayObj::parse($parser, $list)->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullArgument>
      <code><![CDATA[$token->keyword]]></code>
      <code><![CDATA[$token->keyword]]></code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$this->dest]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Components/JoinKeyword.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <MixedArrayOffset>
      <code><![CDATA[static::$joins[$token->keyword]]]></code>
      <code><![CDATA[static::$joins[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[static::$joins[$token->keyword]]]></code>
      <code><![CDATA[static::$joins[$token->keyword]]]></code>
    </MixedArrayTypeCoercion>
    <PossiblyFalseOperand>
      <code><![CDATA[array_search($c->type, static::$joins)]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>ArrayObj::parse($parser, $list)</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullPropertyAssignmentValue>
      <code>$expr</code>
      <code>$on</code>
      <code>$type</code>
      <code>$using</code>
      <code><![CDATA[Expression::parse($parser, $list, ['field' => 'table'])]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <UnusedVariable>
      <code>$state</code>
      <code>$state</code>
      <code>$state</code>
    </UnusedVariable>
  </file>
  <file src="src/Components/Key.php">
    <MixedAssignment>
      <code><![CDATA[$lastColumn['length']]]></code>
      <code><![CDATA[$lastColumn['name']]]></code>
      <code><![CDATA[$ret->name]]></code>
      <code><![CDATA[$ret->type]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[Expression::parse($parser, $list, ['parenthesesDelimited' => true])]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code>$name</code>
      <code>$type</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyTypeCoercion>
      <code><![CDATA[$ret->columns]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Components/Limit.php">
    <MixedAssignment>
      <code><![CDATA[$ret->offset]]></code>
      <code><![CDATA[$ret->rowCount]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Components/LockExpression.php">
    <MissingConstructor>
      <code>$table</code>
      <code>$type</code>
    </MissingConstructor>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[Expression::parse($parser, $list, ['parseField' => 'table'])]]></code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Components/OptionsArray.php">
    <MixedArgument>
      <code>$option</code>
      <code>$option</code>
      <code><![CDATA[$option['name']]]></code>
      <code><![CDATA[$option['name']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['name']]]></code>
      <code>empty($lastOption[2]) ? [] : $lastOption[2]</code>
      <code><![CDATA[is_array($ret->options[$lastOptionId])
                            ? $ret->options[$lastOptionId]['name']
                            : $ret->options[$lastOptionId]]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code>$lastOption[1]</code>
      <code>$lastOption[1]</code>
      <code>$lastOption[2]</code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['name']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$ret->options[$lastOptionId]['equals']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$lastOption</code>
      <code>$lastOptionId</code>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code>$options[]</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[! empty($option['expr']) ? $option['expr'] : $option['value']]]></code>
      <code><![CDATA[$option['name']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
    </MixedOperand>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
    </MixedPropertyTypeCoercion>
    <PossiblyNullArgument>
      <code>empty($lastOption[2]) ? [] : $lastOption[2]</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code>$lastOption[1]</code>
      <code>$lastOption[2]</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']->expr]]></code>
    </PossiblyNullPropertyFetch>
  </file>
  <file src="src/Components/OrderKeyword.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$expr</code>
      <code>Expression::parse($parser, $list)</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Components/ParameterDefinition.php">
    <MixedAssignment>
      <code><![CDATA[$expr->name]]></code>
    </MixedAssignment>
    <PossiblyNullPropertyAssignmentValue>
      <code>$inOut</code>
      <code>$name</code>
      <code>$type</code>
      <code>DataType::parse($parser, $list)</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[isset($expr->name)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Components/PartitionDefinition.php">
    <MissingConstructor>
      <code>$expr</code>
      <code>$isSubpartition</code>
      <code>$name</code>
      <code>$options</code>
      <code>$subpartitions</code>
      <code>$type</code>
    </MissingConstructor>
    <MixedAssignment>
      <code><![CDATA[$ret->name]]></code>
      <code><![CDATA[$ret->type]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$ret->name]]></code>
    </MixedOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[Expression::parse(
                        $parser,
                        $list,
                        [
                            'parenthesesDelimited' => true,
                            'breakOnAlias' => true,
                        ]
                    )]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyTypeCoercion>
      <code><![CDATA[ArrayObj::parse(
                        $parser,
                        $list,
                        ['type' => self::class]
                    )]]></code>
    </PropertyTypeCoercion>
    <UnusedVariable>
      <code>$idx</code>
    </UnusedVariable>
  </file>
  <file src="src/Components/Reference.php">
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[ArrayObj::parse($parser, $list)->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullPropertyAssignmentValue>
      <code>$options</code>
      <code>$table</code>
      <code><![CDATA[Expression::parse(
                    $parser,
                    $list,
                    [
                        'parseField' => 'table',
                        'breakOnAlias' => true,
                    ]
                )]]></code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Components/RenameOperation.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$new</code>
      <code>$old</code>
      <code><![CDATA[Expression::parse(
                    $parser,
                    $list,
                    [
                        'breakOnAlias' => true,
                        'parseField' => 'table',
                    ]
                )]]></code>
      <code><![CDATA[Expression::parse(
                    $parser,
                    $list,
                    [
                        'breakOnAlias' => true,
                        'parseField' => 'table',
                    ]
                )]]></code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Components/SetOperation.php">
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$tmp->expr]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$token->value === ',']]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Components/UnionKeyword.php">
    <PossiblyUnusedMethod>
      <code>buildAll</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Context.php">
    <InvalidPropertyAssignmentValue>
      <code>[]</code>
    </InvalidPropertyAssignmentValue>
    <InvalidPropertyFetch>
      <code>$context::$keywords</code>
    </InvalidPropertyFetch>
    <MixedAssignment>
      <code>self::$keywords</code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code>getIdentifierQuote</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Contexts/ContextMariaDb100000.php">
    <UnusedClass>
      <code>ContextMariaDb100000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100100.php">
    <UnusedClass>
      <code>ContextMariaDb100100</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100200.php">
    <UnusedClass>
      <code>ContextMariaDb100200</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100300.php">
    <UnusedClass>
      <code>ContextMariaDb100300</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100400.php">
    <UnusedClass>
      <code>ContextMariaDb100400</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100500.php">
    <UnusedClass>
      <code>ContextMariaDb100500</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100600.php">
    <UnusedClass>
      <code>ContextMariaDb100600</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50000.php">
    <UnusedClass>
      <code>ContextMySql50000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50100.php">
    <UnusedClass>
      <code>ContextMySql50100</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50500.php">
    <UnusedClass>
      <code>ContextMySql50500</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50600.php">
    <UnusedClass>
      <code>ContextMySql50600</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50700.php">
    <UnusedClass>
      <code>ContextMySql50700</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql80000.php">
    <UnusedClass>
      <code>ContextMySql80000</code>
    </UnusedClass>
  </file>
  <file src="src/Core.php">
    <RedundantConditionGivenDocblockType>
      <code>Context::$keywords !== []</code>
      <code>Context::$keywords !== []</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Exceptions/ParserException.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$token</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Lexer.php">
    <LoopInvalidation>
      <code><![CDATA[$this->last]]></code>
      <code><![CDATA[$this->last]]></code>
      <code><![CDATA[$this->last]]></code>
    </LoopInvalidation>
    <MixedAssignment>
      <code>$lastToken</code>
      <code>$token</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$lastToken->flags]]></code>
      <code><![CDATA[$lastToken->token]]></code>
      <code><![CDATA[$lastToken->value]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$token->flags]]></code>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <MixedPropertyAssignment>
      <code>$lastToken</code>
      <code>$lastToken</code>
      <code>$lastToken</code>
      <code>$lastToken</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
    </MixedPropertyAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$lastToken->flags]]></code>
      <code><![CDATA[$lastToken->token]]></code>
      <code><![CDATA[$lastToken->type]]></code>
      <code><![CDATA[$lastToken->type]]></code>
      <code><![CDATA[$lastToken->value]]></code>
      <code><![CDATA[$lastToken->value]]></code>
      <code><![CDATA[$token->flags]]></code>
      <code><![CDATA[$token->token]]></code>
      <code><![CDATA[$token->token]]></code>
      <code><![CDATA[$token->type]]></code>
      <code><![CDATA[$token->type]]></code>
      <code><![CDATA[$token->type]]></code>
      <code><![CDATA[$token->value]]></code>
      <code><![CDATA[$token->value]]></code>
    </MixedPropertyFetch>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$list->tokens]]></code>
      <code><![CDATA[$list->tokens]]></code>
      <code><![CDATA[$list->tokens]]></code>
    </MixedPropertyTypeCoercion>
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <ParamNameMismatch>
      <code>$msg</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$flags</code>
      <code><![CDATA[$this->str[$this->last + 1]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$this->delimiter]]></code>
      <code><![CDATA[$this->str[$this->last++]]]></code>
      <code><![CDATA[$this->str[$this->last++]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$next->type]]></code>
      <code><![CDATA[$next->value]]></code>
      <code><![CDATA[$next->value]]></code>
      <code><![CDATA[$next->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyUnusedMethod>
      <code>parseBool</code>
      <code>parseComment</code>
      <code>parseDelimiter</code>
      <code>parseKeyword</code>
      <code>parseLabel</code>
      <code>parseNumber</code>
      <code>parseOperator</code>
      <code>parseSymbol</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Parser.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$lastStatement->union]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidStringClass>
      <code><![CDATA[new $class($this, $this->list)]]></code>
    </InvalidStringClass>
    <MixedArrayOffset>
      <code><![CDATA[static::$statementParsers[$statementName ?? $token->keyword]]]></code>
      <code><![CDATA[static::$statementParsers[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[static::$statementParsers[$statementName ?? $token->keyword]]]></code>
      <code><![CDATA[static::$statementParsers[$token->keyword]]]></code>
    </MixedArrayTypeCoercion>
    <ParamNameMismatch>
      <code>$msg</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$list</code>
      <code>$list</code>
      <code>$list</code>
      <code><![CDATA[$token->token]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$list->tokens[$list->idx]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$list->tokens]]></code>
      <code>static::$statementParsers</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullOperand>
      <code><![CDATA[$list->idx]]></code>
      <code><![CDATA[$list->idx]]></code>
      <code>$prevLastIdx</code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignment>
      <code>$list</code>
      <code>$list</code>
    </PossiblyNullPropertyAssignment>
    <PossiblyNullPropertyAssignmentValue>
      <code>$lastIdx</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$list->count]]></code>
      <code><![CDATA[$list->idx]]></code>
      <code><![CDATA[$list->tokens]]></code>
      <code><![CDATA[$token->keyword]]></code>
      <code><![CDATA[$token->token]]></code>
      <code><![CDATA[$token->type]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>getNextOfType</code>
      <code>getNextOfType</code>
      <code>getNextOfType</code>
    </PossiblyNullReference>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$list = &$this->list]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="src/Statement.php">
    <InvalidArgument>
      <code>$built[$field]</code>
      <code><![CDATA[$parsedClauses[$token->value]]]></code>
    </InvalidArgument>
    <MixedArrayOffset>
      <code><![CDATA[$parsedClauses[$token->value]]]></code>
      <code><![CDATA[$parsedClauses[$token->value]]]></code>
      <code><![CDATA[Parser::$keywordParsers[$token->value]]]></code>
      <code>Parser::$keywordParsers[$tokenValue]</code>
      <code><![CDATA[Parser::$statementParsers[$token->keyword]]]></code>
      <code><![CDATA[Parser::$statementParsers[$token->value]]]></code>
      <code><![CDATA[static::$clauses[$token->value]]]></code>
      <code><![CDATA[static::$statementOptions[$token->value]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code>Parser::$keywordParsers[$tokenValue]</code>
      <code><![CDATA[Parser::$statementParsers[$token->keyword]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$tokenValue</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$this->$field->build()]]></code>
    </MixedOperand>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[Parser::$keywordParsers[$name]['class']]]></code>
      <code><![CDATA[Parser::$keywordParsers[$name]['field']]]></code>
      <code><![CDATA[Parser::$keywordParsers[$tokenValue]['class']]]></code>
      <code><![CDATA[Parser::$keywordParsers[$tokenValue]['field']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedReturnValue>
      <code>bool</code>
    </PossiblyUnusedReturnValue>
    <UndefinedMethod>
      <code><![CDATA[$class::buildAll($this->$field)]]></code>
    </UndefinedMethod>
    <UnusedForeachValue>
      <code>$index</code>
    </UnusedForeachValue>
  </file>
  <file src="src/Statements/AlterStatement.php">
    <MixedArgumentTypeCoercion>
      <code>$tmp</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$altered</code>
      <code>$tmp[]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <PossiblyNullIterator>
      <code><![CDATA[$this->altered]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>build</code>
      <code>build</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Statements/AnalyzeStatement.php">
    <PossiblyUnusedProperty>
      <code>$tables</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/CallStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->call->name]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$this->call->name]]></code>
      <code><![CDATA[$this->call->parameters]]></code>
    </PossiblyNullPropertyFetch>
  </file>
  <file src="src/Statements/CreateStatement.php">
    <MixedArgument>
      <code><![CDATA[$this->$field]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$this->partitionsNum]]></code>
      <code><![CDATA[$this->subpartitionsNum]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$this->$field]]></code>
    </MixedOperand>
    <PossiblyInvalidOperand>
      <code>$brackets</code>
      <code>$brackets</code>
    </PossiblyInvalidOperand>
    <PossiblyNullArgument>
      <code><![CDATA[$this->parameters]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$token->value]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>has</code>
      <code>has</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code><![CDATA[ArrayObj::parse(
                                $parser,
                                $list,
                                ['type' => PartitionDefinition::class]
                            )]]></code>
      <code>ArrayObj::parse($parser, $list)</code>
    </PropertyTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->fields instanceof ArrayObj]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Statements/DeleteStatement.php">
    <MixedArgument>
      <code><![CDATA[$token->keyword]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$fromExpr</code>
    </MixedAssignment>
    <MixedPropertyAssignment>
      <code>$fromExpr</code>
      <code>$fromExpr</code>
      <code>$fromExpr</code>
    </MixedPropertyAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$fromExpr->column]]></code>
      <code><![CDATA[$fromExpr->table]]></code>
    </MixedPropertyFetch>
    <PossiblyNullArgument>
      <code><![CDATA[$token->keyword]]></code>
    </PossiblyNullArgument>
    <PossiblyNullIterator>
      <code><![CDATA[$this->from]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>build</code>
    </PossiblyNullReference>
    <PossiblyUnusedProperty>
      <code>$partition</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/DropStatement.php">
    <PossiblyUnusedProperty>
      <code>$table</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/ExplainStatement.php">
    <MixedAssignment>
      <code><![CDATA[$this->connectionId]]></code>
      <code><![CDATA[$this->explainedColumn]]></code>
      <code><![CDATA[$this->explainedDatabase]]></code>
      <code><![CDATA[$this->explainedTable]]></code>
    </MixedAssignment>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$nextToken->keyword]]></code>
      <code><![CDATA[$nextToken->value]]></code>
    </PossiblyNullPropertyFetch>
    <PropertyNotSetInConstructor>
      <code>$statementAlias</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Statements/InsertStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->into]]></code>
      <code><![CDATA[$this->options]]></code>
    </PossiblyNullOperand>
    <PossiblyUnusedProperty>
      <code>$with</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/LoadStatement.php">
    <MixedArgument>
      <code><![CDATA[$token->value]]></code>
    </MixedArgument>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>ArrayObj::parse($parser, $list)</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullOperand>
      <code><![CDATA[$this->fieldsOptions]]></code>
      <code><![CDATA[$this->fileName]]></code>
      <code><![CDATA[$this->linesRows]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->table]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$nextToken->keyword]]></code>
      <code><![CDATA[$nextToken->token]]></code>
      <code><![CDATA[$nextToken->type]]></code>
    </PossiblyNullPropertyFetch>
  </file>
  <file src="src/Statements/MaintenanceStatement.php">
    <PossiblyNullReference>
      <code>merge</code>
    </PossiblyNullReference>
    <PossiblyUnusedProperty>
      <code>$tables</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/OptimizeStatement.php">
    <PossiblyUnusedProperty>
      <code>$tables</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/PurgeStatement.php">
    <ImplicitToStringCast>
      <code>Expression::parse($parser, $list, [])</code>
    </ImplicitToStringCast>
    <MixedAssignment>
      <code><![CDATA[$this->endOption]]></code>
      <code><![CDATA[$this->logType]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$this->endExpr]]></code>
      <code><![CDATA[$this->logType]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Statements/RenameStatement.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->renames]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Statements/ReplaceStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->into]]></code>
      <code><![CDATA[$this->options]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Statements/SelectStatement.php">
    <PossiblyNullArrayOffset>
      <code>$tables[$thisDb]</code>
    </PossiblyNullArrayOffset>
    <PossiblyUnusedProperty>
      <code>$endOptions</code>
      <code>$groupOptions</code>
      <code>$indexHints</code>
      <code>$partition</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/SetStatement.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->set]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>build</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Statements/TransactionStatement.php">
    <MixedAssignment>
      <code>$statement</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$statement->build()]]></code>
    </MixedOperand>
    <PossiblyNullIterator>
      <code><![CDATA[$this->statements]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>build</code>
      <code>has</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Statements/TruncateStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->table]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Statements/UpdateStatement.php">
    <PossiblyUnusedProperty>
      <code>$join</code>
      <code>$set</code>
      <code>$where</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/WithStatement.php">
    <MixedArgument>
      <code>$wither</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$wither</code>
    </MixedAssignment>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$this->withers]]></code>
      <code><![CDATA[$this->withers]]></code>
    </PossiblyNullArrayOffset>
  </file>
  <file src="src/TokensList.php">
    <RedundantConditionGivenDocblockType>
      <code>is_array($list)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Tools/ContextGenerator.php">
    <PossiblyNullArgument>
      <code><![CDATA[$options['keywords']]]></code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code>++$i !== $count</code>
      <code>++$i !== $count</code>
    </RedundantCondition>
    <UnnecessaryVarAnnotation>
      <code>string</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Tools/CustomJsonSerializer.php">
    <MixedAssignment>
      <code>$data[$property]</code>
      <code>$data[$property]</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$properties</code>
    </MoreSpecificImplementedParamType>
    <PropertyNotSetInConstructor>
      <code>CustomJsonSerializer</code>
    </PropertyNotSetInConstructor>
    <UnusedMethodCall>
      <code>setAccessible</code>
    </UnusedMethodCall>
  </file>
  <file src="src/Tools/TestGenerator.php">
    <MixedOperand>
      <code>$debug</code>
    </MixedOperand>
    <PossiblyNullArgument>
      <code>$debugFile</code>
      <code>$debugFile</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Translator.php">
    <DocblockTypeContradiction>
      <code>self::$loader === null</code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code>self::$translator !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/UtfString.php">
    <PossiblyUnusedProperty>
      <code>$byteLen</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Utils/BufferedQuery.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->status]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Utils/CLI.php">
    <InvalidReturnStatement>
      <code>getopt($opt, $long)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>string[]|false[]|false</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion>
      <code>$idx</code>
    </MixedArgumentTypeCoercion>
    <PossiblyFalseArgument>
      <code>$params</code>
      <code>$params</code>
      <code><![CDATA[$params['c']]]></code>
      <code><![CDATA[$params['q']]]></code>
      <code><![CDATA[$params['q']]]></code>
      <code><![CDATA[$params['q']]]></code>
    </PossiblyFalseArgument>
  </file>
  <file src="src/Utils/Error.php">
    <PossiblyNullArgument>
      <code>$err[0]</code>
      <code>$err[1]</code>
      <code>$err[3]</code>
    </PossiblyNullArgument>
    <RedundantConditionGivenDocblockType>
      <code>$obj instanceof Parser</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Utils/Formatter.php">
    <MixedArgument>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['flags']]]></code>
      <code><![CDATA[$format['flags']]]></code>
      <code><![CDATA[$format['function']]]></code>
      <code><![CDATA[$format['html']]]></code>
      <code><![CDATA[$format['type']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[JoinKeyword::$joins[$list->tokens[$list->idx - 2]->value]]]></code>
      <code><![CDATA[JoinKeyword::$joins[$list->tokens[$list->idx - 4]->value]]]></code>
      <code><![CDATA[JoinKeyword::$joins[$list->tokens[$list->idx - 6]->value]]]></code>
      <code><![CDATA[JoinKeyword::$joins[$prev->value]]]></code>
      <code><![CDATA[Parser::$keywordParsers[$token->keyword]]]></code>
      <code><![CDATA[Parser::$statementParsers[$token->keyword]]]></code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$shortClauses[$lastClause]</code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[Parser::$keywordParsers[$token->keyword]]]></code>
      <code><![CDATA[Parser::$statementParsers[$token->keyword]]]></code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$shortClauses[$lastClause]</code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$blocksLineEndings[]</code>
      <code>$format</code>
      <code>$func</code>
      <code>$lastClause</code>
      <code>$lineEnded</code>
      <code>$prev</code>
      <code>$text</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$func($text)</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['flags']]]></code>
      <code><![CDATA[$format['html']]]></code>
      <code>$lineEnded</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$text</code>
      <code>$text</code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code><![CDATA[$options['formats']]]></code>
      <code><![CDATA[$this->options['indentation']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidIterator>
      <code><![CDATA[$this->options['formats']]]></code>
    </PossiblyInvalidIterator>
  </file>
  <file src="src/Utils/Query.php">
    <InvalidNullableReturnType>
      <code>int</code>
    </InvalidNullableReturnType>
    <MixedArrayOffset>
      <code><![CDATA[$clauses[$token->keyword]]]></code>
      <code><![CDATA[$clauses[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[$clauses[$token->keyword]]]></code>
      <code><![CDATA[$clauses[$token->keyword]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$expr</code>
      <code>$expressions[]</code>
      <code>$rename</code>
      <code>$ret[]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <MixedPropertyAssignment>
      <code>$expr</code>
      <code>$expr</code>
    </MixedPropertyAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$expr->table]]></code>
      <code><![CDATA[$rename->old]]></code>
    </MixedPropertyFetch>
    <MixedReturnTypeCoercion>
      <code>$ret</code>
      <code><![CDATA[array<int, string>]]></code>
    </MixedReturnTypeCoercion>
    <NullableReturnStatement>
      <code>$i</code>
    </NullableReturnStatement>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$list->tokens]]></code>
      <code><![CDATA[$list->tokens]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullIterator>
      <code>$expressions</code>
      <code><![CDATA[$statement->renames]]></code>
    </PossiblyNullIterator>
    <PossiblyNullOperand>
      <code>$i</code>
      <code>$i</code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$lexer->list->getNextOfType(Token::TYPE_KEYWORD)->keyword]]></code>
      <code><![CDATA[$statement->into->dest]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>has</code>
      <code>has</code>
      <code>has</code>
    </PossiblyNullReference>
    <RedundantCondition>
      <code><![CDATA[$ret['select_tables'] === []]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Utils/Routine.php">
    <MixedArgumentTypeCoercion>
      <code>$options</code>
      <code>$options</code>
      <code><![CDATA[$retval['opts'][$idx]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$opt['value']]]></code>
      <code><![CDATA[$opt['value']]]></code>
      <code><![CDATA[$opt['value']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$opt</code>
      <code>$opt</code>
      <code>$opt</code>
      <code>$options[]</code>
      <code>$options[]</code>
      <code><![CDATA[$retval['opts'][$idx][]]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Utils/Table.php">
    <MixedArgument>
      <code>$opt</code>
      <code>$opt</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$opt</code>
      <code>$opt</code>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code><![CDATA[$ret[$field->name]['default_value']]]></code>
      <code><![CDATA[$ret[$field->name]['expr']]]></code>
    </MixedAssignment>
    <PossiblyNullArrayOffset>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>has</code>
      <code>has</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Utils/Tokens.php">
    <InvalidArgument>
      <code>$find[$k]</code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$list->tokens[$j]]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$newList</code>
      <code>$newList</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$list->tokens[$i]]]></code>
      <code><![CDATA[$list->tokens[$j]]]></code>
      <code><![CDATA[$list->tokens[$j]]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$newList[]</code>
      <code>$newList[]</code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$list->tokens[$i]->type]]></code>
      <code><![CDATA[$list->tokens[$j]->type]]></code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument>
      <code>$list</code>
      <code><![CDATA[$pattern['value_str']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidOperand>
      <code><![CDATA[$pattern['flags']]]></code>
    </PossiblyInvalidOperand>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$list->count]]></code>
      <code><![CDATA[$list->tokens]]></code>
    </PossiblyInvalidPropertyFetch>
    <UndefinedPropertyFetch>
      <code><![CDATA[$list->count]]></code>
      <code><![CDATA[$list->tokens]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="tests/Builder/AlterStatementTest.php">
    <PossiblyUnusedMethod>
      <code>provideBuilderForRenameColumn</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Builder/CreateStatementTest.php">
    <PossiblyNullReference>
      <code>__toString</code>
      <code>__toString</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>partitionQueriesProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Builder/StatementTest.php">
    <PossiblyUnusedMethod>
      <code>getAliasesProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/ArrayObjTest.php">
    <PossiblyUnusedMethod>
      <code>parseProvider</code>
    </PossiblyUnusedMethod>
    <UndefinedMethod>
      <code>$components</code>
      <code>$components</code>
    </UndefinedMethod>
  </file>
  <file src="tests/Components/CreateDefinitionTest.php">
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$component[0]->type->name]]></code>
      <code><![CDATA[$component[1]->key->name]]></code>
      <code><![CDATA[$component[1]->key->type]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>has</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Components/ExpressionTest.php">
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$component->alias]]></code>
      <code><![CDATA[$component->alias]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->table]]></code>
      <code><![CDATA[$component->table]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyUnusedMethod>
      <code>mysqlCommandsProvider</code>
      <code>parseErrProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/GroupKeywordTest.php">
    <PossiblyUnusedMethod>
      <code>provideExpressions</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/JoinKeywordTest.php">
    <DocblockTypeContradiction>
      <code>assertNull</code>
      <code>assertNull</code>
      <code>assertNull</code>
    </DocblockTypeContradiction>
  </file>
  <file src="tests/Components/KeyTest.php">
    <DocblockTypeContradiction>
      <code>assertNull</code>
      <code>assertNull</code>
    </DocblockTypeContradiction>
  </file>
  <file src="tests/Components/LimitTest.php">
    <PossiblyUnusedMethod>
      <code>parseProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/LockExpressionTest.php">
    <PossiblyUnusedMethod>
      <code>parseErrProvider</code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code>assertNotNull</code>
      <code>assertNotNull</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="tests/Components/PartitionDefinitionTest.php">
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$component->expr->expr]]></code>
      <code><![CDATA[$component->expr->expr]]></code>
    </PossiblyInvalidPropertyFetch>
  </file>
  <file src="tests/Lexer/ContextTest.php">
    <PossiblyUnusedMethod>
      <code>contextLoadingProvider</code>
      <code>contextNamesProvider</code>
      <code>providerForTestMode</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Lexer/LexerTest.php">
    <PossiblyUnusedMethod>
      <code>lexProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Misc/BugsTest.php">
    <PossiblyUnusedMethod>
      <code>bugProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Misc/ParameterTest.php">
    <PossiblyUnusedMethod>
      <code>parameterProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Misc/UtfStringTest.php">
    <PossiblyUnusedMethod>
      <code>utf8StringsProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/AlterStatementTest.php">
    <PossiblyUnusedMethod>
      <code>alterProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/AnalyzeStatementTest.php">
    <PossiblyUnusedMethod>
      <code>analyzeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/CallStatementTest.php">
    <PossiblyUnusedMethod>
      <code>callProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/CreateStatementTest.php">
    <PossiblyUnusedMethod>
      <code>createProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/DeleteStatementTest.php">
    <PossiblyUnusedMethod>
      <code>deleteProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/DropStatementTest.php">
    <PossiblyUnusedMethod>
      <code>dropProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ExplainStatementTest.php">
    <PossiblyUnusedMethod>
      <code>explainProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/InsertStatementTest.php">
    <PossiblyUnusedMethod>
      <code>insertProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/LoadStatementTest.php">
    <PossiblyNullReference>
      <code>has</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>loadProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/LockStatementTest.php">
    <PossiblyUnusedMethod>
      <code>lockProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ParserLongExportsTest.php">
    <MixedAssignment>
      <code>$transactionStatement</code>
    </MixedAssignment>
    <PossiblyNullIterator>
      <code><![CDATA[$statement->statements]]></code>
    </PossiblyNullIterator>
    <PossiblyUnusedMethod>
      <code>exportFileProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ParserTest.php">
    <PossiblyUnusedMethod>
      <code>parseProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/PurgeStatementTest.php">
    <PossiblyUnusedMethod>
      <code>purgeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/RenameStatementTest.php">
    <PossiblyUnusedMethod>
      <code>renameProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ReplaceStatementTest.php">
    <PossiblyUnusedMethod>
      <code>replaceProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/RestoreStatementTest.php">
    <PossiblyUnusedMethod>
      <code>restoreProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/SelectStatementTest.php">
    <PossiblyNullReference>
      <code>has</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>selectProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/SetStatementTest.php">
    <PossiblyUnusedMethod>
      <code>setProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/TransactionStatementTest.php">
    <PossiblyUnusedMethod>
      <code>transactionProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/UpdateStatementTest.php">
    <PossiblyUnusedMethod>
      <code>updateProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/WithStatementTest.php">
    <PossiblyUnusedMethod>
      <code>parseWith</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/TestCase.php">
    <InvalidReturnStatement>
      <code>$data</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{
     *   query: string,
     *   lexer: Lexer,
     *   parser: Parser|null,
     *   errors: array{lexer: list<array{string, string, int, int}>, parser: list<array{string, Token, int}>}
     * }]]></code>
    </InvalidReturnType>
    <RedundantCast>
      <code><![CDATA[(int) $err->getCode()]]></code>
      <code><![CDATA[(int) $err->getCode()]]></code>
    </RedundantCast>
  </file>
  <file src="tests/Tools/templates/TestContext.php">
    <UnusedClass>
      <code>TestContext</code>
    </UnusedClass>
  </file>
  <file src="tests/Utils/BufferedQueryTest.php">
    <PossiblyUnusedMethod>
      <code>extractProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Utils/CLITest.php">
    <PossiblyUnusedMethod>
      <code>highlightParamsProvider</code>
      <code>highlightParamsStdInProvider</code>
      <code>lintParamsProvider</code>
      <code>lintParamsStdInProvider</code>
      <code>stdinParamsProvider</code>
      <code>tokenizeParamsProvider</code>
      <code>tokenizeParamsStdInProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Utils/FormatterTest.php">
    <PossiblyUnusedMethod>
      <code>formatQueriesProviders</code>
      <code>mergeFormatsProvider</code>
    </PossiblyUnusedMethod>
    <UnusedMethodCall>
      <code>setAccessible</code>
    </UnusedMethodCall>
  </file>
  <file src="tests/Utils/QueryTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>getFlagsProvider</code>
      <code>getTablesProvider</code>
    </PossiblyUnusedMethod>
    <UnusedVariable>
      <code>$delimiter</code>
      <code>$delimiter</code>
      <code>$query</code>
    </UnusedVariable>
  </file>
  <file src="tests/Utils/RoutineTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$parser->statements[0]]]></code>
    </ArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code>getParameterProvider</code>
      <code>getParametersProvider</code>
      <code>getReturnTypeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Utils/TableTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$parser->statements[0]]]></code>
      <code><![CDATA[$parser->statements[0]]]></code>
    </ArgumentTypeCoercion>
    <InvalidReturnStatement>
      <code><![CDATA[[
            [
                'CREATE USER test',
                [],
            ],
            [
                'CREATE TABLE `address` (
                  `address_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
                  `address` varchar(50) NOT NULL,
                  `address2` varchar(50) DEFAULT NULL,
                  `district` varchar(20) NOT NULL,
                  `city_id` smallint(5) unsigned NOT NULL,
                  `postal_code` varchar(10) DEFAULT NULL,
                  `phone` varchar(20) NOT NULL,
                  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                  PRIMARY KEY (`address_id`),
                  KEY `idx_fk_city_id` (`city_id`),
                  CONSTRAINT `fk_address_city` FOREIGN KEY (`city_id`) REFERENCES `city` (`city_id`) ON UPDATE CASCADE
                ) ENGINE=InnoDB AUTO_INCREMENT=606 DEFAULT CHARSET=utf8',
                [
                    'address_id' => [
                        'type' => 'SMALLINT',
                        'timestamp_not_null' => false,
                    ],
                    'address' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                    ],
                    'address2' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                        'default_value' => 'NULL',
                    ],
                    'district' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                    ],
                    'city_id' => [
                        'type' => 'SMALLINT',
                        'timestamp_not_null' => false,
                    ],
                    'postal_code' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                        'default_value' => 'NULL',
                    ],
                    'phone' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                    ],
                    'last_update' => [
                        'type' => 'TIMESTAMP',
                        'timestamp_not_null' => true,
                        'default_value' => 'CURRENT_TIMESTAMP',
                        'default_current_timestamp' => true,
                        'on_update_current_timestamp' => true,
                    ],
                ],
            ],
            [
                'CREATE TABLE table1 (
                    a INT NOT NULL,
                    b VARCHAR(32),
                    c INT AS (a mod 10) VIRTUAL,
                    d VARCHAR(5) AS (left(b,5)) PERSISTENT
                )',
                [
                    'a' => [
                        'type' => 'INT',
                        'timestamp_not_null' => false,
                    ],
                    'b' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                    ],
                    'c' => [
                        'type' => 'INT',
                        'timestamp_not_null' => false,
                        'generated' => true,
                        'expr' => '(a mod 10)',
                    ],
                    'd' => [
                        'type' => 'VARCHAR',
                        'timestamp_not_null' => false,
                        'generated' => true,
                        'expr' => '(left(b,5))',
                    ],
                ],
            ],
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[list<array{string, array<string, array{
     *   type: string,
     *   timestamp_not_null: bool,
     *   default_value?: string,
     *   default_current_timestamp?: bool,
     *   on_update_current_timestamp?: bool,
     *   expr?: string
     * }>}>]]></code>
    </InvalidReturnType>
    <PossiblyUnusedMethod>
      <code>getFieldsProvider</code>
      <code>getForeignKeysProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Utils/TokensTest.php">
    <InvalidArgument>
      <code>$find</code>
    </InvalidArgument>
    <PossiblyUnusedMethod>
      <code>matchProvider</code>
      <code>replaceTokensProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/benchmarks/UtfStringBench.php">
    <MissingConstructor>
      <code>$testContents</code>
    </MissingConstructor>
    <UnusedClass>
      <code>UtfStringBench</code>
    </UnusedClass>
  </file>
</files>
